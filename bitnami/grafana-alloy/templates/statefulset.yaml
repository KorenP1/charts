{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  {{- with .Values.commonLabels }}
  labels: {{- include "common.labels.standard" (dict "customLabels" . "context" $) | nindent 4 }}
  {{- end }}
  {{- with .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  serviceName: {{ printf "%s-hl" (include "common.names.fullname" .) }}
  updateStrategy: {{ include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
  {{- with .Values.minReadySeconds }}
  minReadySeconds: {{ . }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.podLabels .Values.commonLabels) "context" .) }}
  selector:
    matchLabels: {{ include "common.labels.matchLabels" (dict "customLabels" $podLabels "context" $) | nindent 6 }}
      app.kubernetes.io/component: grafana-alloy
      app.kubernetes.io/part-of: grafana-alloy
  template:
    metadata:
      labels: {{ include "common.labels.matchLabels" (dict "customLabels" $podLabels "context" $) | nindent 8 }}
        app.kubernetes.io/component: grafana-alloy
        app.kubernetes.io/part-of: grafana-alloy
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{ include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ default (ternary (include "common.names.fullname" .) "default" .Values.serviceAccount.create) .Values.serviceAccount.name }}
      {{- include "common.images.pullSecrets" (dict "images" (list .Values.image) "global" .Values.global) | nindent 6 }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- with .Values.hostAliases }}
      hostAliases: {{ include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      hostIPC: {{ .Values.hostIPC }}
      {{- with .Values.schedulerName }}
      schedulerName: {{ . | quote }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "grafana-alloy" "customLabels" $podLabels "topologyKey" .Values.topologyKey "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "grafana-alloy" "customLabels" $podLabels "topologyKey" .Values.topologyKey "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.runtimeClassName }}
      runtimeClassName: {{ . }}
      {{- end }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      {{- with .Values.dnsPolicy  }}
      dnsPolicy: {{ . }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      volumes:
      - name: config-alloy
        configMap:
          name: {{ default (printf "%s-configuration" (include "common.names.fullname" .)) .Values.existingConfigMap }}
      - name: data
        emptyDir: {}
      {{- with .Values.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 6 }}
      {{- end }}
      containers:
        - name: alloy
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- with .Values.command }}
          command: {{ . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args: {{ . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.extraEnvVars }}
          env: {{ include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .Values.extraContainerPorts }}
          ports:
            {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command:
                - curl
                - --fail
                - http://localhost:12345/-/ready
          {{- end }}
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command:
                - curl
                - --fail
                - http://localhost:12345/-/ready
          {{- end }}
          {{- if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command:
                - curl
                - --fail
                - http://localhost:12345/-/ready
          {{- end }}
          {{- with .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{ include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: config-alloy
            mountPath: /opt/bitnami/grafana-alloy/config.alloy
            subPath: {{ .Values.configMapKey }}
          - name: data
            mountPath: /opt/bitnami/grafana-alloy/data
          {{- with .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 10 }}
          {{- end }}